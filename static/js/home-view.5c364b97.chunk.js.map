{"version":3,"sources":["services/TMDB.js","components/List/List.module.css","components/ItemList/ItemList.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/ItemList/ItemList.jsx","components/List/List.jsx","components/HomePageTitle/HomePageTitle.module.css","components/HomePageTitle/HomePageTitle.jsx","pages/HomePage.js"],"names":["KEY_API","getTrending","page","a","params","axios","get","response","results","data","console","error","searchMovies","query","getMovieDetails","movie_id","getMovieCredits","cast","getMovieReviews","defaults","baseURL","module","exports","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","ItemList","backdrop_path","original_title","release_date","poster_path","vote_average","movieId","className","s","item","to","link","src","alt","text_date","TrendingList","list","map","id","HomePageTitle","text","title","HomePage","useState","movies","setMovies","useEffect","then","catch","log","List"],"mappings":"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","file":"static/js/home-view.5c364b97.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\nconst KEY_API = 'e34f3290161d1b3f73683dcba0238c76';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nexport async function getTrending(page) {\r\n  let params = `trending/movie/day?api_key=${KEY_API}`;\r\n  try {\r\n    const response = await axios.get(params);\r\n    const results = response.data.results;\r\n\r\n    // console.log(response)\r\n    // console.log(results);\r\n\r\n    return results;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport async function searchMovies(query, page) {\r\n  let params = `search/movie?query=${query}&api_key=${KEY_API}&language=en-US&page=${page}&include_adult=false`;\r\n  try {\r\n    const response = await axios.get(params);\r\n    const results = response.data.results;\r\n\r\n    return results;\r\n\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\nexport async function getMovieDetails(movie_id) {\r\n  let params = `movie/${movie_id}?api_key=${KEY_API}&language=en-US`;\r\n  try {\r\n    const response = await axios.get(params);\r\n    const results = response.data;\r\n\r\n    return results;\r\n\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\nexport async function getMovieCredits(movie_id) {\r\n  let params = `movie/${movie_id}/credits?api_key=${KEY_API}&language=en-US`;\r\n  try {\r\n    const response = await axios.get(params);\r\n    const results = response.data.cast;\r\n\r\n    return results;\r\n\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n\r\n\r\nexport async function getMovieReviews(movie_id) {\r\n  let params = `movie/${movie_id}/reviews?api_key=${KEY_API}&language=en-US&page=1`;\r\n  try {\r\n    const response = await axios.get(params);\r\n    const results = response.data.results;\r\n\r\n    return results;\r\n    \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3D-U0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ItemList_item__12lSE\",\"text_date\":\"ItemList_text_date__UC3Xz\",\"link\":\"ItemList_link__feOOO\"};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ItemList.module.css';\r\n\r\nexport default function ItemList({\r\n  backdrop_path,\r\n  original_title,\r\n  poster_path,\r\n  release_date,\r\n  vote_average,\r\n  movieId,\r\n}) {\r\n  \r\n\r\n  return (\r\n    \r\n      \r\n    <li className={s.item}>\r\n      <Link to={`/movies/${movieId}`} className={s.link}>\r\n          <article>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w780${backdrop_path}`}\r\n              alt={original_title}\r\n            />\r\n            <h3>{original_title}</h3>\r\n            <p>Release date:\r\n              <span className={s.text_date}>\r\n                {release_date}\r\n              </span>\r\n            </p>\r\n            <p>Rating: {vote_average}</p>\r\n          </article>\r\n      </Link>    \r\n    </li>\r\n      \r\n    \r\n    \r\n  );\r\n}\r\n\r\nItemList.propTypes = {\r\n  // id: PropTypes.number.isRequired,\r\n  backdrop_path: PropTypes.string,\r\n  original_title: PropTypes.string,\r\n  poster_path: PropTypes.string,\r\n  release_date: PropTypes.string,\r\n  vote_average: PropTypes.number,\r\n  movieId: PropTypes.number,\r\n};\r\n\r\n// backdrop_path: \"/cinER0ESG0eJ49kXlExM0MEWGxW.jpg\"\r\n// genre_ids: (3) [28, 12, 14]\r\n// id: 566525\r\n// media_type: \"movie\"\r\n// original_language: \"en\"\r\n// original_title: \"Shang-Chi and the Legend of the Ten Rings\"\r\n// overview: \"Shang-Chi must confront the past he thought he left behind when he is drawn into the web of the mysterious Ten Rings organization.\"\r\n// popularity: 1858.052\r\n// poster_path: \"/1BIoJGKbXjdFDAqUEiA2VHqkK1Z.jpg\"\r\n// release_date: \"2021-09-01\"\r\n// title: \"Shang-Chi and the Legend of the Ten Rings\"\r\n// video: false\r\n// vote_average: 7.8\r\n// vote_count: 1556\r\n","import PropTypes from 'prop-types';\r\nimport s from './List.module.css';\r\nimport ItemList from '../ItemList/ItemList';\r\n\r\n\r\nexport default function TrendingList({ list }) {\r\n  \r\n  return (\r\n    <ul className={s.list}>\r\n      {list.map(\r\n        ({\r\n          id,\r\n          backdrop_path,\r\n          original_title,\r\n          poster_path,\r\n          release_date,\r\n          vote_average,\r\n        }) => (\r\n          <ItemList\r\n            key={id}\r\n            movieId={id}\r\n            backdrop_path={backdrop_path}\r\n            original_title={original_title}\r\n            poster_path={poster_path}\r\n            release_date={release_date}\r\n            vote_average={vote_average}\r\n          />\r\n        ),\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nTrendingList.propTypes = {\r\n  list: PropTypes.array.isRequired,\r\n};\r\n\r\n// backdrop_path: \"/cinER0ESG0eJ49kXlExM0MEWGxW.jpg\"\r\n// genre_ids: (3) [28, 12, 14]\r\n// id: 566525\r\n// media_type: \"movie\"\r\n// original_language: \"en\"\r\n// original_title: \"Shang-Chi and the Legend of the Ten Rings\"\r\n// overview: \"Shang-Chi must confront the past he thought he left behind when he is drawn into the web of the mysterious Ten Rings organization.\"\r\n// popularity: 1858.052\r\n// poster_path: \"/1BIoJGKbXjdFDAqUEiA2VHqkK1Z.jpg\"\r\n// release_date: \"2021-09-01\"\r\n// title: \"Shang-Chi and the Legend of the Ten Rings\"\r\n// video: false\r\n// vote_average: 7.8\r\n// vote_count: 1556\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HomePageTitle_title__3VgQb\"};","import s from './HomePageTitle.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function HomePageTitle({text}) {\r\n    return <h1 className={s.title}>{text}</h1>\r\n    \r\n};\r\n\r\n\r\nHomePageTitle.propTypes = {\r\n    text: PropTypes.string,\r\n};\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport { getTrending } from '../services/TMDB';\r\nimport HomePageTitle from '../components/HomePageTitle/HomePageTitle';\r\nimport List from '../components/List/List';\r\n\r\n\r\nexport default function HomePage() {\r\n  const [page, setPage] = useState(1);\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getTrending(page)\r\n      .then(results => setMovies([...movies, ...results]))\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <HomePageTitle text='Trending today'/>\r\n      <List list={movies} />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}